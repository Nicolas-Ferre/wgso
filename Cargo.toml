[workspace]
members = ["crates/*", "run-wasm"]
resolver = "2"

[workspace.package]
authors = ["Nicolas Ferr√© <nicolas.ferre.public@gmail.com>"]
edition = "2021"
version = "0.1.0"
license = "MIT OR Apache-2.0"
repository = "https://github.com/Nicolas-Ferre/wgso"
rust-version = "1.84.1"

[workspace.dependencies]
android-activity = { version = "0.6", features = ["native-activity"] }
android_logger = "0.15"
annotate-snippets = "0.11"
cargo-run-wasm = "0.4"
clap = { version = "4", features = ["derive"] }
fs_extra = "1"
futures = "0.3"
fxhash = "0.2"
include_dir = "0.7"
itertools = "0.14"
notify = "8"
pico-args = "0.5"
regex = "1.11"
reqwest = { version = "0.12", features = ["blocking"] }
rstest = "0.25"
serde = { version = "1.0", features = ["derive"] }
serde_regex = "1.1"
serde_valid = "1.0"
serde_yml = "0.0.12"
strip-ansi-escapes = "0.2"
tempfile = "3"
thiserror = "2"
walkdir = "2"
winit = "0.30"
zip = "2"

naga = { version = "25.0", features = ["wgsl-in", "wgsl-out"] }
wgpu = "25.0"

wgso_deps = { version = "0.1.0", path = "crates/wgso_deps" }
wgso_parser = { version = "0.1.0", path = "crates/wgso_parser" }

[workspace.lints.rust]
anonymous_parameters = "warn"
elided_lifetimes_in_paths = "warn"
missing_docs = "warn"
trivial_numeric_casts = "warn"
unreachable_pub = "warn"
unsafe_code = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_qualifications = "warn"

[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }
dbg_macro = "warn"
decimal_literal_representation = "warn"
filetype_is_file = "warn"
float_cmp_const = "warn"
get_unwrap = "warn"
integer_division = "warn"
lossy_float_literal = "warn"
mem_forget = "warn"
multiple_inherent_impl = "warn"
print_stdout = "warn"
rest_pat_in_fully_bound_structs = "warn"
todo = "warn" # no-todocheck
unimplemented = "warn"
unneeded_field_pattern = "warn"
unwrap_used = "warn"
use_debug = "warn"
verbose_file_reads = "warn"
wildcard_enum_match_arm = "warn"

module_name_repetitions = { level = "allow", priority = 1 } # types are generally used without a module prefix
missing_const_for_fn = { level = "allow", priority = 1 } # const may be removed in the future for some methods, which would be a breaking change
missing_panics_doc = { level = "allow", priority = 1 } # many false positives due to internal errors that should not occur
multiple_crate_versions = { level = "allow", priority = 1 } # cannot be easily fixed
must_use_candidate = { level = "allow", priority = 1 } # many false positives
needless_pass_by_value = { level = "allow", priority = 1 } # not accurate
option_if_let_else = { level = "allow", priority = 1 } # many false positives
redundant_pub_crate = { level = "allow", priority = 1 } # not working well for now
return_self_not_must_use = { level = "allow", priority = 1 } # many false positives
significant_drop_tightening = { level = "allow", priority = 1 } # many false positives
